{
    "C_Cpp.errorSquiggles": "Enabled",
    "files.associations": {
        "string": "cpp",
        "filesystem": "cpp",
        "iosfwd": "cpp",
        "ostream": "cpp",
        "__config": "cpp",
        "__threading_support": "cpp",
        "__bit_reference": "cpp",
        "__bits": "cpp",
        "__debug": "cpp",
        "__hash_table": "cpp",
        "__locale": "cpp",
        "__mutex_base": "cpp",
        "__node_handle": "cpp",
        "__nullptr": "cpp",
        "__split_buffer": "cpp",
        "__string": "cpp",
        "__tree": "cpp",
        "__tuple": "cpp",
        "array": "cpp",
        "atomic": "cpp",
        "bitset": "cpp",
        "chrono": "cpp",
        "cmath": "cpp",
        "compare": "cpp",
        "complex": "cpp",
        "deque": "cpp",
        "exception": "cpp",
        "__memory": "cpp",
        "algorithm": "cpp",
        "functional": "cpp",
        "memory_resource": "cpp",
        "initializer_list": "cpp",
        "ios": "cpp",
        "istream": "cpp",
        "limits": "cpp",
        "locale": "cpp",
        "map": "cpp",
        "memory": "cpp",
        "mutex": "cpp",
        "new": "cpp",
        "optional": "cpp",
        "sstream": "cpp",
        "stdexcept": "cpp",
        "streambuf": "cpp",
        "string_view": "cpp",
        "system_error": "cpp",
        "thread": "cpp",
        "tuple": "cpp",
        "type_traits": "cpp",
        "typeinfo": "cpp",
        "unordered_map": "cpp",
        "variant": "cpp",
        "vector": "cpp",
        "any": "cpp",
        "charconv": "cpp",
        "codecvt": "cpp",
        "condition_variable": "cpp",
        "fstream": "cpp",
        "future": "cpp",
        "iomanip": "cpp",
        "list": "cpp",
        "numeric": "cpp",
        "queue": "cpp",
        "random": "cpp",
        "regex": "cpp",
        "set": "cpp",
        "shared_mutex": "cpp",
        "stack": "cpp",
        "typeindex": "cpp",
        "unordered_set": "cpp",
        "concepts": "cpp",
        "cstddef": "cpp",
        "cstdint": "cpp",
        "iterator": "cpp",
        "forward_list": "cpp",
        "ratio": "cpp",
        "utility": "cpp",
        "iostream": "cpp",
        "cstdio": "cpp"
    },
    "cmake.sourceDirectory": "${workspaceFolder}/bitcoin/src/crc32c",
    "cmake.configureOnOpen": false,
    "C_Cpp.clang_format_fallbackStyle": "Google",
    "[cpp]": {
        "editor.detectIndentation": true,
        "editor.tabSize": 2
    },
    // 在保存时对代码进行格式化，非常有用
    "editor.formatOnSave": true,
    //当按tab键是，用空格代替
    // PS: 开启这个可以充分避免因为tab键和space键混用而导致的代码一团糟
    // 特别是在编写python代码的时候 XD
    "editor.insertSpaces": true,
    // 按住 Ctrl 键并滚动鼠标滚轮时对编辑器字体大小进行缩放
    // 如在meeting适，share屏幕下VS Code字体太小，就能进行调节
    "editor.mouseWheelZoom": true,
    // 显示控制字符
    // 这个也非常有用，有时候一些看不到的特殊字符可能会让你debug半天
    "editor.renderControlCharacters": true,
    // 显示空白字符
    // 我使用的是 boundary 模式，这样可以比较清晰地看到每行开头和结尾的空格字符
    "editor.renderWhitespace": "boundary",
    "editor.guides.indentation": true,
}